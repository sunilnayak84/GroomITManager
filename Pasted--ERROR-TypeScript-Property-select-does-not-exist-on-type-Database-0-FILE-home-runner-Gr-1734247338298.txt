 ERROR(TypeScript)  Property 'select' does not exist on type 'Database'.
[0]  FILE  /home/runner/GroomITManager/server/auth.ts:401:12
[0] 
[0]     399 |         // Get user from PostgreSQL database or create if doesn't exist
[0]     400 |         const existingUser = await db
[0]   > 401 |           .select()
[0]         |            ^^^^^^
[0]     402 |           .from(users)
[0]     403 |           .where(eq(users.id, decodedToken.uid))
[0]     404 |           .limit(1)
[0] 
[0]  ERROR(TypeScript)  Parameter 'rows' implicitly has an 'any' type.
[0]  FILE  /home/runner/GroomITManager/server/auth.ts:405:17
[0] 
[0]     403 |           .where(eq(users.id, decodedToken.uid))
[0]     404 |           .limit(1)
[0]   > 405 |           .then(rows => rows[0]);
[0]         |                 ^^^^
[0]     406 |
[0]     407 |         if (!existingUser) {
[0]     408 |           await createUserInDatabase({
[0] 
[0]  ERROR(TypeScript)  Subsequent property declarations must have the same type.  Property 'user' must be of type 'FirebaseUser | undefined', but here has type '{ uid: string; email: string | null; role: "admin" | "manager" | "staff" | "receptionist"; permissions: string[]; displayName: string; } | undefined'.
[0]  FILE  /home/runner/GroomITManager/server/middleware/auth.ts:9:7
[0] 
[0]      7 |   namespace Express {
[0]      8 |     interface Request {
[0]   >  9 |       user?: {
[0]        |       ^^^^
[0]     10 |         uid: string;
[0]     11 |         email: string | null;
[0]     12 |         role: keyof typeof RoleTypes;
[0] 
[0]  ERROR(TypeScript)  Type '{ uid: string; email: string; displayName: string; role: "admin" | "manager" | "staff" | "receptionist"; permissions: string[]; }' is missing the following properties from type 'FirebaseUser': id, name
[0]  FILE  /home/runner/GroomITManager/server/middleware/auth.ts:152:7
[0] 
[0]     150 |       });
[0]     151 |       
[0]   > 152 |       req.user = {
[0]         |       ^^^^^^^^
[0]     153 |         uid: user.uid,
[0]     154 |         email: user.email || '',
[0]     155 |         displayName: user.displayName || user.email?.split('@')[0] || 'Unknown User',
[0] 
[0]  ERROR(TypeScript)  'req.user' is possibly 'undefined'.
[0]  FILE  /home/runner/GroomITManager/server/middleware/auth.ts:161:16
[0] 
[0]     159 |       
[0]     160 |       console.log(`[AUTH] User authenticated:`, {
[0]   > 161 |         email: req.user.email,
[0]         |                ^^^^^^^^
[0]     162 |         role: req.user.role,
[0]     163 |         permissions: req.user.permissions.length
[0]     164 |       });
[0] 
[0]  ERROR(TypeScript)  'req.user' is possibly 'undefined'.
[0]  FILE  /home/runner/GroomITManager/server/middleware/auth.ts:162:15
[0] 
[0]     160 |       console.log(`[AUTH] User authenticated:`, {
[0]     161 |         email: req.user.email,
[0]   > 162 |         role: req.user.role,
[0]         |               ^^^^^^^^
[0]     163 |         permissions: req.user.permissions.length
[0]     164 |       });
[0]     165 |       
[0] 
[0]  ERROR(TypeScript)  'req.user' is possibly 'undefined'.
[0]  FILE  /home/runner/GroomITManager/server/middleware/auth.ts:163:22
[0] 
[0]     161 |         email: req.user.email,
[0]     162 |         role: req.user.role,
[0]   > 163 |         permissions: req.user.permissions.length
[0]         |                      ^^^^^^^^
[0]     164 |       });
[0]     165 |       
[0]     166 |       next();
[0] 
[0]  ERROR(TypeScript)  Parameter 'p' implicitly has an 'any' type.
[0]  FILE  /home/runner/GroomITManager/server/routes.ts:276:49
[0] 
[0]     274 |       const validatedPermissions = validatePermissions(permissions);
[0]     275 |       if (validatedPermissions.length !== permissions.length) {
[0]   > 276 |         const invalidPerms = permissions.filter(p => !isValidPermission(p));
[0]         |                                                 ^
[0]     277 |         return res.status(400).json({
[0]     278 |           message: "Some permissions were invalid",
[0]     279 |           code: "INVALID_PERMISSIONS",
[0] 
[0]  ERROR(TypeScript)  Argument of type '"admin" | "manager" | "staff" | "receptionist"' is not assignable to parameter of type 'RoleTypes'.
[0]   Type '"admin"' is not assignable to type 'RoleTypes'.
[0]  FILE  /home/runner/GroomITManager/server/routes.ts:370:55
[0] 
[0]     368 |
[0]     369 |       // Validate role
[0]   > 370 |       if (!role || !Object.values(RoleTypes).includes(role)) {
[0]         |                                                       ^^^^
[0]     371 |         return res.status(400).json({ 
[0]     372 |           message: "Invalid role specified",
[0]     373 |           code: "INVALID_ROLE",
[0] 
[0]  ERROR(TypeScript)  Argument of type '"admin" | "manager" | "staff" | "receptionist"' is not assignable to parameter of type 'RoleTypes'.
[0]   Type '"admin"' is not assignable to type 'RoleTypes'.
[0]  FILE  /home/runner/GroomITManager/server/routes.ts:395:51
[0] 
[0]     393 |
[0]     394 |       // Update user role with validated permissions
[0]   > 395 |       const result = await updateUserRole(userId, role, validatedPermissions);
[0]         |                                                   ^^^^
[0]     396 |       
[0]     397 |       console.log('[ROLE-UPDATE] Update successful:', result);
[0]     398 |       
[0] 
[0] [TypeScript] Found 10 errors. Watching for file changes.
