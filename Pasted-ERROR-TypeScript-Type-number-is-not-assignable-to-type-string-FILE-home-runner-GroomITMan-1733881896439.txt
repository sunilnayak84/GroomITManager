ERROR(TypeScript)  Type 'number' is not assignable to type 'string'.
 FILE  /home/runner/GroomITManager/client/src/components/AppointmentForm.tsx:44:7

    42 |       serviceId: undefined,
    43 |       groomerId: defaultGroomerId,
  > 44 |       branchId: 1,
       |       ^^^^^^^^
    45 |       date: new Date(),
    46 |       status: "pending",
    47 |       notes: "",

 ERROR(TypeScript)  Type 'Date' is not assignable to type 'string'.
 FILE  /home/runner/GroomITManager/client/src/components/AppointmentForm.tsx:45:7

    43 |       groomerId: defaultGroomerId,
    44 |       branchId: 1,
  > 45 |       date: new Date(),
       |       ^^^^
    46 |       status: "pending",
    47 |       notes: "",
    48 |       productsUsed: null

 ERROR(TypeScript)  Argument of type '{ status: "pending"; date: Date; notes: string | null; petId: string; serviceId: string; groomerId: string; branchId: string; productsUsed: string | null; }' is not assignable to parameter of type '{ status: "pending" | "confirmed" | "completed" | "cancelled"; date: string; notes: string | null; petId: string; serviceId: string; groomerId: string; branchId: string; productsUsed: string | null; }'.
  Types of property 'date' are incompatible.
    Type 'Date' is not assignable to type 'string'.
 FILE  /home/runner/GroomITManager/client/src/components/AppointmentForm.tsx:59:28

    57 |     };
    58 |     try {
  > 59 |       await addAppointment(data);
       |                            ^^^^
    60 |       toast({
    61 |         title: "Success",
    62 |         description: "Appointment scheduled successfully",

 ERROR(TypeScript)  Type 'string | FieldValue' is not assignable to type 'ReactNode'.
  Type 'FieldValue' is not assignable to type 'ReactNode'.
 FILE  /home/runner/GroomITManager/client/src/components/AppointmentForm.tsx:104:25

    102 |                         value={String(pet.id)}
    103 |                       >
  > 104 |                         {pet.name} - {pet.breed}
        |                         ^^^^^^^^^^
    105 |                       </SelectItem>
    106 |                     ))}
    107 |                   </SelectContent>

 ERROR(TypeScript)  Type 'string | FieldValue' is not assignable to type 'ReactNode'.
  Type 'FieldValue' is not assignable to type 'ReactNode'.
 FILE  /home/runner/GroomITManager/client/src/components/AppointmentForm.tsx:104:38

    102 |                         value={String(pet.id)}
    103 |                       >
  > 104 |                         {pet.name} - {pet.breed}
        |                                      ^^^^^^^^^^^
    105 |                       </SelectItem>
    106 |                     ))}
    107 |                   </SelectContent>

 ERROR(TypeScript)  The left-hand side of an 'instanceof' expression must be of type 'any', an object type or a type parameter.
 FILE  /home/runner/GroomITManager/client/src/components/AppointmentForm.tsx:122:28

    120 |                     type="datetime-local" 
    121 |                     {...field}
  > 122 |                     value={field.value instanceof Date ? field.value.toISOString().slice(0, 16) : ''}
        |                            ^^^^^^^^^^^
    123 |                     onChange={(e) => field.onChange(new Date(e.target.value))}
    124 |                   />
    125 |                 </FormControl>

 ERROR(TypeScript)  Type 'string | undefined' is not assignable to type 'string'.
  Type 'undefined' is not assignable to type 'string'.
 FILE  /home/runner/GroomITManager/client/src/components/InventoryUsageHistory.tsx:98:43

     96 |             <SelectItem value="all">All Services</SelectItem>
     97 |             {uniqueServices.map((serviceId) => (
  >  98 |               <SelectItem key={serviceId} value={serviceId}>
        |                                           ^^^^^
     99 |                 Service {serviceId}
    100 |               </SelectItem>
    101 |             ))}

 ERROR(TypeScript)  Type 'string | null' is not assignable to type 'number | null | undefined'.
  Type 'string' is not assignable to type 'number'.
 FILE  /home/runner/GroomITManager/client/src/components/PetForm.tsx:164:9

    162 |         age: data.age !== null ? Number(data.age) : null,
    163 |         gender: data.gender || null,
  > 164 |         weight: data.weight || null,
        |         ^^^^^^
    165 |         weightUnit: data.weightUnit,
    166 |         notes: data.notes || null,
    167 |         image: data.image,

 ERROR(TypeScript)  No overload matches this call.
  Overload 1 of 3, '(firestore: Firestore, path: string, ...pathSegments: string[]): DocumentReference<DocumentData, DocumentData>', gave the following error.
    Argument of type 'CollectionReference<WithFieldValue<{ id: string; email: string; name: string; role: "admin" | "groomer"; branchId: string | null; createdAt: Date; updatedAt?: Date | undefined; }>, DocumentData>' is not assignable to parameter of type 'Firestore'.
      Type 'CollectionReference<WithFieldValue<{ id: string; email: string; name: string; role: "admin" | "groomer"; branchId: string | null; createdAt: Date; updatedAt?: Date | undefined; }>, DocumentData>' is missing the following properties from type 'Firestore': app, toJSON
  Overload 2 of 3, '(reference: CollectionReference<WithFieldValue<{ id: string; email: string; name: string; role: "admin" | "groomer"; branchId: string | null; createdAt: Date; updatedAt?: Date | undefined; }>, DocumentData>, path?: string | undefined, ...pathSegments: string[]): DocumentReference<...>', gave the following error.
    Argument of type 'string | FieldValue' is not assignable to parameter of type 'string | undefined'.
      Type 'FieldValue' is not assignable to type 'string'.
  Overload 3 of 3, '(reference: DocumentReference<DocumentData, DocumentData>, path: string, ...pathSegments: string[]): DocumentReference<DocumentData, DocumentData>', gave the following error.
    Argument of type 'CollectionReference<WithFieldValue<{ id: string; email: string; name: string; role: "admin" | "groomer"; branchId: string | null; createdAt: Date; updatedAt?: Date | undefined; }>, DocumentData>' is not assignable to parameter of type 'DocumentReference<DocumentData, DocumentData>'.
      Types of property 'type' are incompatible.
        Type '"collection"' is not assignable to type '"document"'.
 FILE  /home/runner/GroomITManager/client/src/hooks/use-appointments.ts:50:43

    48 |
    49 |           // Get groomer details
  > 50 |           const groomerDoc = await getDoc(doc(usersCollection, appointmentData.groomerId));
       |                                           ^^^
    51 |           const groomerData = groomerDoc.data();
    52 |           if (!groomerData) continue;
    53 |

 ERROR(TypeScript)  Type 'number' is not assignable to type 'string'.
 FILE  /home/runner/GroomITManager/client/src/hooks/use-appointments.ts:68:13

    66 |           const appointment: AppointmentWithRelations = {
    67 |             id: appointmentDoc.id,
  > 68 |             petId: Number(appointmentData.petId),
       |             ^^^^^
    69 |             serviceId: Number(appointmentData.serviceId),
    70 |             groomerId: appointmentData.groomerId,
    71 |             branchId: Number(appointmentData.branchId),

 ERROR(TypeScript)  Type 'number' is not assignable to type 'string'.
 FILE  /home/runner/GroomITManager/client/src/hooks/use-appointments.ts:69:13

    67 |             id: appointmentDoc.id,
    68 |             petId: Number(appointmentData.petId),
  > 69 |             serviceId: Number(appointmentData.serviceId),
       |             ^^^^^^^^^
    70 |             groomerId: appointmentData.groomerId,
    71 |             branchId: Number(appointmentData.branchId),
    72 |             date: toSafeDate(appointmentData.date) || new Date(),

 ERROR(TypeScript)  Type 'string | FieldValue' is not assignable to type 'string'.
  Type 'FieldValue' is not assignable to type 'string'.
 FILE  /home/runner/GroomITManager/client/src/hooks/use-appointments.ts:70:13

    68 |             petId: Number(appointmentData.petId),
    69 |             serviceId: Number(appointmentData.serviceId),
  > 70 |             groomerId: appointmentData.groomerId,
       |             ^^^^^^^^^
    71 |             branchId: Number(appointmentData.branchId),
    72 |             date: toSafeDate(appointmentData.date) || new Date(),
    73 |             status,

 ERROR(TypeScript)  Type 'number' is not assignable to type 'string'.
 FILE  /home/runner/GroomITManager/client/src/hooks/use-appointments.ts:71:13

    69 |             serviceId: Number(appointmentData.serviceId),
    70 |             groomerId: appointmentData.groomerId,
  > 71 |             branchId: Number(appointmentData.branchId),
       |             ^^^^^^^^
    72 |             date: toSafeDate(appointmentData.date) || new Date(),
    73 |             status,
    74 |             notes: appointmentData.notes ?? null,

 ERROR(TypeScript)  Type 'Date' is not assignable to type 'string'.
 FILE  /home/runner/GroomITManager/client/src/hooks/use-appointments.ts:72:13

    70 |             groomerId: appointmentData.groomerId,
    71 |             branchId: Number(appointmentData.branchId),
  > 72 |             date: toSafeDate(appointmentData.date) || new Date(),
       |             ^^^^
    73 |             status,
    74 |             notes: appointmentData.notes ?? null,
    75 |             productsUsed: appointmentData.productsUsed ?? null,

 ERROR(TypeScript)  Type 'string | FieldValue | null' is not assignable to type 'string | null'.
  Type 'FieldValue' is not assignable to type 'string'.
 FILE  /home/runner/GroomITManager/client/src/hooks/use-appointments.ts:74:13

    72 |             date: toSafeDate(appointmentData.date) || new Date(),
    73 |             status,
  > 74 |             notes: appointmentData.notes ?? null,
       |             ^^^^^
    75 |             productsUsed: appointmentData.productsUsed ?? null,
    76 |             createdAt: createdDate,
    77 |             updatedAt: toDateOrUndefined(appointmentData.updatedAt),

 ERROR(TypeScript)  Type 'string | FieldValue | null' is not assignable to type 'string | null'.
  Type 'FieldValue' is not assignable to type 'string'.
 FILE  /home/runner/GroomITManager/client/src/hooks/use-appointments.ts:75:13

    73 |             status,
    74 |             notes: appointmentData.notes ?? null,
  > 75 |             productsUsed: appointmentData.productsUsed ?? null,
       |             ^^^^^^^^^^^^
    76 |             createdAt: createdDate,
    77 |             updatedAt: toDateOrUndefined(appointmentData.updatedAt),
    78 |             pet: {

 ERROR(TypeScript)  Type 'Date' is not assignable to type 'string'.
 FILE  /home/runner/GroomITManager/client/src/hooks/use-appointments.ts:76:13

    74 |             notes: appointmentData.notes ?? null,
    75 |             productsUsed: appointmentData.productsUsed ?? null,
  > 76 |             createdAt: createdDate,
       |             ^^^^^^^^^
    77 |             updatedAt: toDateOrUndefined(appointmentData.updatedAt),
    78 |             pet: {
    79 |               name: petData.name,

 ERROR(TypeScript)  Type 'Date | undefined' is not assignable to type 'string | null'.
  Type 'undefined' is not assignable to type 'string | null'.
 FILE  /home/runner/GroomITManager/client/src/hooks/use-appointments.ts:77:13

    75 |             productsUsed: appointmentData.productsUsed ?? null,
    76 |             createdAt: createdDate,
  > 77 |             updatedAt: toDateOrUndefined(appointmentData.updatedAt),
       |             ^^^^^^^^^
    78 |             pet: {
    79 |               name: petData.name,
    80 |               breed: petData.breed,

 ERROR(TypeScript)  Type 'string | FieldValue' is not assignable to type 'string'.
  Type 'FieldValue' is not assignable to type 'string'.
 FILE  /home/runner/GroomITManager/client/src/hooks/use-appointments.ts:79:15

    77 |             updatedAt: toDateOrUndefined(appointmentData.updatedAt),
    78 |             pet: {
  > 79 |               name: petData.name,
       |               ^^^^
    80 |               breed: petData.breed,
    81 |               image: petData.image ?? null
    82 |             },

 ERROR(TypeScript)  Type 'string | FieldValue' is not assignable to type 'string'.
  Type 'FieldValue' is not assignable to type 'string'.
 FILE  /home/runner/GroomITManager/client/src/hooks/use-appointments.ts:80:15

    78 |             pet: {
    79 |               name: petData.name,
  > 80 |               breed: petData.breed,
       |               ^^^^^
    81 |               image: petData.image ?? null
    82 |             },
    83 |             customer: {

 ERROR(TypeScript)  Type 'string | FieldValue | { readonly lastModified: number | FieldValue; readonly name: string | FieldValue; readonly webkitRelativePath: string | FieldValue; ... 6 more ...; text: FieldValue | WithFieldValue<...>; } | null' is not assignable to type 'string | null'.
  Type 'FieldValue' is not assignable to type 'string'.
 FILE  /home/runner/GroomITManager/client/src/hooks/use-appointments.ts:81:15

    79 |               name: petData.name,
    80 |               breed: petData.breed,
  > 81 |               image: petData.image ?? null
       |               ^^^^^
    82 |             },
    83 |             customer: {
    84 |               firstName: customerData.firstName,

 ERROR(TypeScript)  Type 'string | FieldValue' is not assignable to type 'string'.
  Type 'FieldValue' is not assignable to type 'string'.
 FILE  /home/runner/GroomITManager/client/src/hooks/use-appointments.ts:84:15

    82 |             },
    83 |             customer: {
  > 84 |               firstName: customerData.firstName,
       |               ^^^^^^^^^
    85 |               lastName: customerData.lastName
    86 |             },
    87 |             groomer: {

 ERROR(TypeScript)  Type 'string | FieldValue' is not assignable to type 'string'.
  Type 'FieldValue' is not assignable to type 'string'.
 FILE  /home/runner/GroomITManager/client/src/hooks/use-appointments.ts:85:15

    83 |             customer: {
    84 |               firstName: customerData.firstName,
  > 85 |               lastName: customerData.lastName
       |               ^^^^^^^^
    86 |             },
    87 |             groomer: {
    88 |               name: groomerData.name

 ERROR(TypeScript)  Argument of type 'AppointmentDocumentData' is not assignable to parameter of type 'WithFieldValue<WithFieldValue<{ id: string; status: "pending" | "confirmed" | "completed" | "cancelled"; date: string; branchId: string; createdAt: string; updatedAt: string | null; notes: string | null; petId: string; serviceId: string; groomerId: string; productsUsed: string | null; }>>'.
  Type 'AppointmentDocumentData' is missing the following properties from type '{ id: WithFieldValue<string | FieldValue>; status: WithFieldValue<FieldValue | WithFieldValue<"pending" | "confirmed" | "completed" | "cancelled">>; ... 8 more ...; productsUsed: WithFieldValue<...>; }': id, updatedAt
 FILE  /home/runner/GroomITManager/client/src/hooks/use-appointments.ts:131:59

    129 |
    130 |       // Add the document to Firestore
  > 131 |       const docRef = await addDoc(appointmentsCollection, baseData);
        |                                                           ^^^^^^^^
    132 |       
    133 |       // Construct the return data with the correct type
    134 |       const returnData = {

 ERROR(TypeScript)  Type 'number' is not assignable to type 'string'.
 FILE  /home/runner/GroomITManager/client/src/hooks/use-appointments.ts:136:9

    134 |       const returnData = {
    135 |         id: docRef.id,
  > 136 |         petId: baseData.petId,
        |         ^^^^^
    137 |         serviceId: baseData.serviceId,
    138 |         groomerId: baseData.groomerId,
    139 |         branchId: baseData.branchId,

 ERROR(TypeScript)  Type 'number' is not assignable to type 'string'.
 FILE  /home/runner/GroomITManager/client/src/hooks/use-appointments.ts:137:9

    135 |         id: docRef.id,
    136 |         petId: baseData.petId,
  > 137 |         serviceId: baseData.serviceId,
        |         ^^^^^^^^^
    138 |         groomerId: baseData.groomerId,
    139 |         branchId: baseData.branchId,
    140 |         date: baseData.date,

 ERROR(TypeScript)  Type 'number' is not assignable to type 'string'.
 FILE  /home/runner/GroomITManager/client/src/hooks/use-appointments.ts:139:9

    137 |         serviceId: baseData.serviceId,
    138 |         groomerId: baseData.groomerId,
  > 139 |         branchId: baseData.branchId,
        |         ^^^^^^^^
    140 |         date: baseData.date,
    141 |         status: baseData.status,
    142 |         notes: baseData.notes,

 ERROR(TypeScript)  Type 'Date' is not assignable to type 'string'.
 FILE  /home/runner/GroomITManager/client/src/hooks/use-appointments.ts:140:9

    138 |         groomerId: baseData.groomerId,
    139 |         branchId: baseData.branchId,
  > 140 |         date: baseData.date,
        |         ^^^^
    141 |         status: baseData.status,
    142 |         notes: baseData.notes,
    143 |         productsUsed: baseData.productsUsed,

 ERROR(TypeScript)  Type 'Date' is not assignable to type 'string'.
 FILE  /home/runner/GroomITManager/client/src/hooks/use-appointments.ts:144:9

    142 |         notes: baseData.notes,
    143 |         productsUsed: baseData.productsUsed,
  > 144 |         createdAt: baseData.createdAt,
        |         ^^^^^^^^^
    145 |         updatedAt: undefined
    146 |       } satisfies Omit<AppointmentWithRelations, 'pet' | 'customer' | 'groomer'>;
    147 |

 ERROR(TypeScript)  Type 'undefined' is not assignable to type 'string | null'.
 FILE  /home/runner/GroomITManager/client/src/hooks/use-appointments.ts:145:9

    143 |         productsUsed: baseData.productsUsed,
    144 |         createdAt: baseData.createdAt,
  > 145 |         updatedAt: undefined
        |         ^^^^^^^^^
    146 |       } satisfies Omit<AppointmentWithRelations, 'pet' | 'customer' | 'groomer'>;
    147 |
    148 |       return returnData;

 ERROR(TypeScript)  No overload matches this call.
  Overload 1 of 3, '(firestore: Firestore, path: string, ...pathSegments: string[]): DocumentReference<DocumentData, DocumentData>', gave the following error.
    Argument of type 'CollectionReference<WithFieldValue<{ id: string; email: string; name: string; role: "admin" | "groomer"; branchId: string | null; createdAt: Date; updatedAt?: Date | undefined; }>, DocumentData>' is not assignable to parameter of type 'Firestore'.
      Type 'CollectionReference<WithFieldValue<{ id: string; email: string; name: string; role: "admin" | "groomer"; branchId: string | null; createdAt: Date; updatedAt?: Date | undefined; }>, DocumentData>' is missing the following properties from type 'Firestore': app, toJSON
  Overload 2 of 3, '(reference: CollectionReference<WithFieldValue<{ id: string; email: string; name: string; role: "admin" | "groomer"; branchId: string | null; createdAt: Date; updatedAt?: Date | undefined; }>, DocumentData>, path?: string | undefined, ...pathSegments: string[]): DocumentReference<...>', gave the following error.
    Argument of type 'string | FieldValue' is not assignable to parameter of type 'string | undefined'.
      Type 'FieldValue' is not assignable to type 'string'.
  Overload 3 of 3, '(reference: DocumentReference<DocumentData, DocumentData>, path: string, ...pathSegments: string[]): DocumentReference<DocumentData, DocumentData>', gave the following error.
    Argument of type 'CollectionReference<WithFieldValue<{ id: string; email: string; name: string; role: "admin" | "groomer"; branchId: string | null; createdAt: Date; updatedAt?: Date | undefined; }>, DocumentData>' is not assignable to parameter of type 'DocumentReference<DocumentData, DocumentData>'.
      Types of property 'type' are incompatible.
        Type '"collection"' is not assignable to type '"document"'.
 FILE  /home/runner/GroomITManager/client/src/hooks/use-appointments.ts:181:43

    179 |
    180 |           // Get groomer details
  > 181 |           const groomerDoc = await getDoc(doc(usersCollection, appointmentData.groomerId));
        |                                           ^^^
    182 |           const groomerData = groomerDoc.data();
    183 |           if (!groomerData) continue;
    184 |

 ERROR(TypeScript)  Type 'number' is not assignable to type 'string'.
 FILE  /home/runner/GroomITManager/client/src/hooks/use-appointments.ts:199:13

    197 |           appointments.push({
    198 |             id: appointmentDoc.id,
  > 199 |             petId: Number(appointmentData.petId),
        |             ^^^^^
    200 |             serviceId: Number(appointmentData.serviceId),
    201 |             groomerId: appointmentData.groomerId,
    202 |             branchId: Number(appointmentData.branchId),

 ERROR(TypeScript)  Type 'number' is not assignable to type 'string'.
 FILE  /home/runner/GroomITManager/client/src/hooks/use-appointments.ts:200:13

    198 |             id: appointmentDoc.id,
    199 |             petId: Number(appointmentData.petId),
  > 200 |             serviceId: Number(appointmentData.serviceId),
        |             ^^^^^^^^^
    201 |             groomerId: appointmentData.groomerId,
    202 |             branchId: Number(appointmentData.branchId),
    203 |             date: toSafeDate(appointmentData.date) || new Date(),

 ERROR(TypeScript)  Type 'string | FieldValue' is not assignable to type 'string'.
  Type 'FieldValue' is not assignable to type 'string'.
 FILE  /home/runner/GroomITManager/client/src/hooks/use-appointments.ts:201:13

    199 |             petId: Number(appointmentData.petId),
    200 |             serviceId: Number(appointmentData.serviceId),
  > 201 |             groomerId: appointmentData.groomerId,
        |             ^^^^^^^^^
    202 |             branchId: Number(appointmentData.branchId),
    203 |             date: toSafeDate(appointmentData.date) || new Date(),
    204 |             status,

 ERROR(TypeScript)  Type 'number' is not assignable to type 'string'.
 FILE  /home/runner/GroomITManager/client/src/hooks/use-appointments.ts:202:13

    200 |             serviceId: Number(appointmentData.serviceId),
    201 |             groomerId: appointmentData.groomerId,
  > 202 |             branchId: Number(appointmentData.branchId),
        |             ^^^^^^^^
    203 |             date: toSafeDate(appointmentData.date) || new Date(),
    204 |             status,
    205 |             notes: appointmentData.notes ?? null,

 ERROR(TypeScript)  Type 'Date' is not assignable to type 'string'.
 FILE  /home/runner/GroomITManager/client/src/hooks/use-appointments.ts:203:13

    201 |             groomerId: appointmentData.groomerId,
    202 |             branchId: Number(appointmentData.branchId),
  > 203 |             date: toSafeDate(appointmentData.date) || new Date(),
        |             ^^^^
    204 |             status,
    205 |             notes: appointmentData.notes ?? null,
    206 |             productsUsed: appointmentData.productsUsed ?? null,

 ERROR(TypeScript)  Type 'string | FieldValue | null' is not assignable to type 'string | null'.
  Type 'FieldValue' is not assignable to type 'string'.
 FILE  /home/runner/GroomITManager/client/src/hooks/use-appointments.ts:205:13

    203 |             date: toSafeDate(appointmentData.date) || new Date(),
    204 |             status,
  > 205 |             notes: appointmentData.notes ?? null,
        |             ^^^^^
    206 |             productsUsed: appointmentData.productsUsed ?? null,
    207 |             createdAt: createdDate,
    208 |             updatedAt: toDateOrUndefined(appointmentData.updatedAt),

 ERROR(TypeScript)  Type 'string | FieldValue | null' is not assignable to type 'string | null'.
  Type 'FieldValue' is not assignable to type 'string'.
 FILE  /home/runner/GroomITManager/client/src/hooks/use-appointments.ts:206:13

    204 |             status,
    205 |             notes: appointmentData.notes ?? null,
  > 206 |             productsUsed: appointmentData.productsUsed ?? null,
        |             ^^^^^^^^^^^^
    207 |             createdAt: createdDate,
    208 |             updatedAt: toDateOrUndefined(appointmentData.updatedAt),
    209 |             pet: {

 ERROR(TypeScript)  Type 'Date' is not assignable to type 'string'.
 FILE  /home/runner/GroomITManager/client/src/hooks/use-appointments.ts:207:13

    205 |             notes: appointmentData.notes ?? null,
    206 |             productsUsed: appointmentData.productsUsed ?? null,
  > 207 |             createdAt: createdDate,
        |             ^^^^^^^^^
    208 |             updatedAt: toDateOrUndefined(appointmentData.updatedAt),
    209 |             pet: {
    210 |               name: petData.name,

 ERROR(TypeScript)  Type 'Date | undefined' is not assignable to type 'string | null'.
  Type 'undefined' is not assignable to type 'string | null'.
 FILE  /home/runner/GroomITManager/client/src/hooks/use-appointments.ts:208:13

    206 |             productsUsed: appointmentData.productsUsed ?? null,
    207 |             createdAt: createdDate,
  > 208 |             updatedAt: toDateOrUndefined(appointmentData.updatedAt),
        |             ^^^^^^^^^
    209 |             pet: {
    210 |               name: petData.name,
    211 |               breed: petData.breed,

 ERROR(TypeScript)  Type 'string | FieldValue' is not assignable to type 'string'.
  Type 'FieldValue' is not assignable to type 'string'.
 FILE  /home/runner/GroomITManager/client/src/hooks/use-appointments.ts:210:15

    208 |             updatedAt: toDateOrUndefined(appointmentData.updatedAt),
    209 |             pet: {
  > 210 |               name: petData.name,
        |               ^^^^
    211 |               breed: petData.breed,
    212 |               image: petData.image ?? null
    213 |             },

 ERROR(TypeScript)  Type 'string | FieldValue' is not assignable to type 'string'.
  Type 'FieldValue' is not assignable to type 'string'.
 FILE  /home/runner/GroomITManager/client/src/hooks/use-appointments.ts:211:15

    209 |             pet: {
    210 |               name: petData.name,
  > 211 |               breed: petData.breed,
        |               ^^^^^
    212 |               image: petData.image ?? null
    213 |             },
    214 |             customer: {

 ERROR(TypeScript)  Type 'string | FieldValue | { readonly lastModified: number | FieldValue; readonly name: string | FieldValue; readonly webkitRelativePath: string | FieldValue; ... 6 more ...; text: FieldValue | WithFieldValue<...>; } | null' is not assignable to type 'string | null'.
  Type 'FieldValue' is not assignable to type 'string'.
 FILE  /home/runner/GroomITManager/client/src/hooks/use-appointments.ts:212:15

    210 |               name: petData.name,
    211 |               breed: petData.breed,
  > 212 |               image: petData.image ?? null
        |               ^^^^^
    213 |             },
    214 |             customer: {
    215 |               firstName: customerData.firstName,

 ERROR(TypeScript)  Type 'string | FieldValue' is not assignable to type 'string'.
  Type 'FieldValue' is not assignable to type 'string'.
 FILE  /home/runner/GroomITManager/client/src/hooks/use-appointments.ts:215:15

    213 |             },
    214 |             customer: {
  > 215 |               firstName: customerData.firstName,
        |               ^^^^^^^^^
    216 |               lastName: customerData.lastName
    217 |             },
    218 |             groomer: {

 ERROR(TypeScript)  Type 'string | FieldValue' is not assignable to type 'string'.
  Type 'FieldValue' is not assignable to type 'string'.
 FILE  /home/runner/GroomITManager/client/src/hooks/use-appointments.ts:216:15

    214 |             customer: {
    215 |               firstName: customerData.firstName,
  > 216 |               lastName: customerData.lastName
        |               ^^^^^^^^
    217 |             },
    218 |             groomer: {
    219 |               name: groomerData.name

 ERROR(TypeScript)  Object literal may only specify known properties, and 'createdAt' does not exist in type 'Omit<Customer, "id" | "firebaseId" | "petCount" | "createdAt" | "updatedAt">'.
 FILE  /home/runner/GroomITManager/client/src/hooks/use-customers.ts:63:11

    61 |         const id = await createCustomer({
    62 |           ...customer,
  > 63 |           createdAt: customer.createdAt || new Date(),
       |           ^^^^^^^^^
    64 |           petCount: 0 // Initialize petCount
    65 |         });
    66 |

 ERROR(TypeScript)  Property 'createdAt' does not exist on type 'InsertCustomer'.
 FILE  /home/runner/GroomITManager/client/src/hooks/use-customers.ts:63:31

    61 |         const id = await createCustomer({
    62 |           ...customer,
  > 63 |           createdAt: customer.createdAt || new Date(),
       |                               ^^^^^^^^^
    64 |           petCount: 0 // Initialize petCount
    65 |         });
    66 |

 ERROR(TypeScript)  Property 'createdAt' does not exist on type 'InsertCustomer'.
 FILE  /home/runner/GroomITManager/client/src/hooks/use-customers.ts:74:31

    72 |           ...customer,
    73 |           petCount: 0,
  > 74 |           createdAt: customer.createdAt || new Date()
       |                               ^^^^^^^^^
    75 |         };
    76 |       } catch (error) {
    77 |         // Log the full error details

 ERROR(TypeScript)  Property 'success' does not exist on type '({ ...props }: Toast) => { id: string; dismiss: () => void; update: (props: ToasterToast) => void; }'.
 FILE  /home/runner/GroomITManager/client/src/hooks/use-customers.ts:94:13

    92 |     onSuccess: () => {
    93 |       queryClient.invalidateQueries({ queryKey: ["customers"] });
  > 94 |       toast.success("Customer added successfully");
       |             ^^^^^^^
    95 |     },
    96 |     onError: (error) => {
    97 |       console.error('ADD_CUSTOMER: Mutation error', { error });

 ERROR(TypeScript)  Property 'error' does not exist on type '({ ...props }: Toast) => { id: string; dismiss: () => void; update: (props: ToasterToast) => void; }'.
 FILE  /home/runner/GroomITManager/client/src/hooks/use-customers.ts:98:13

     96 |     onError: (error) => {
     97 |       console.error('ADD_CUSTOMER: Mutation error', { error });
  >  98 |       toast.error(
        |             ^^^^^
     99 |         error instanceof Error 
    100 |           ? error.message 
    101 |           : "Failed to add customer. Please try again."

 ERROR(TypeScript)  Argument of type 'Partial<Omit<{ id: string; firebaseId: string | null; firstName: string; lastName: string; email: string; phone: string; address: string | null; gender: "male" | "female" | "other" | null; petCount: number; createdAt: string; updatedAt: string | null; }, "id">>' is not assignable to parameter of type 'Partial<Customer>'.
  Types of property 'createdAt' are incompatible.
    Type 'string | undefined' is not assignable to type 'Date | undefined'.
      Type 'string' is not assignable to type 'Date'.
 FILE  /home/runner/GroomITManager/client/src/hooks/use-customers.ts:108:35

    106 |   const updateCustomerMutation = useMutation({
    107 |     mutationFn: async ({ id, data }: { id: string; data: Partial<Omit<CustomerType, 'id'>> }) => {
  > 108 |       await updateCustomerDoc(id, data);
        |                                   ^^^^
    109 |       return {
    110 |         id,
    111 |         ...data

 ERROR(TypeScript)  Property 'success' does not exist on type '({ ...props }: Toast) => { id: string; dismiss: () => void; update: (props: ToasterToast) => void; }'.
 FILE  /home/runner/GroomITManager/client/src/hooks/use-customers.ts:153:13

    151 |     onSuccess: (deletedId) => {
    152 |       console.log('Delete mutation succeeded for customer:', deletedId);
  > 153 |       toast.success("Customer deleted successfully");
        |             ^^^^^^^
    154 |     },
    155 |     onError: (error, _, context) => {
    156 |       console.error('Delete mutation error:', error);

 ERROR(TypeScript)  Property 'error' does not exist on type '({ ...props }: Toast) => { id: string; dismiss: () => void; update: (props: ToasterToast) => void; }'.
 FILE  /home/runner/GroomITManager/client/src/hooks/use-customers.ts:161:13

    159 |         queryClient.setQueryData(["customers"], context.previousCustomers);
    160 |       }
  > 161 |       toast.error(
        |             ^^^^^
    162 |         error instanceof Error 
    163 |           ? error.message 
    164 |           : "Unable to delete customer"

 ERROR(TypeScript)  Conversion of type '{ createdAt: Date | undefined; id: string; firstName: string; lastName: string; email: string; phone: string; address: string | null; gender: "male" | "female" | "other" | null; petCount: number; updatedAt: Date | null; firebaseId: string | null; name?: string | undefined; } | { ...; }' to type '{ id: string; firebaseId: string | null; firstName: string; lastName: string; email: string; phone: string; address: string | null; gender: "male" | "female" | "other" | null; petCount: number; createdAt: string; updatedAt: string | null; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.
  Type '{ createdAt: Date | undefined; id: string | FieldValue; firstName: string | FieldValue; lastName: string | FieldValue; email: string | FieldValue; ... 6 more ...; name?: FieldValue | WithFieldValue<...>; }' is not comparable to type '{ id: string; firebaseId: string | null; firstName: string; lastName: string; email: string; phone: string; address: string | null; gender: "male" | "female" | "other" | null; petCount: number; createdAt: string; updatedAt: string | null; }'.
    Types of property 'createdAt' are incompatible.
      Type 'Date | undefined' is not comparable to type 'string'.
        Type 'Date' is not comparable to type 'string'.
 FILE  /home/runner/GroomITManager/client/src/hooks/use-customers.ts:181:16

    179 |       const customers = snapshot.docs.map(doc => {
    180 |         const customerData = doc.data();
  > 181 |         return {
        |                ^
  > 182 |           id: doc.id,
        | ^^^^^^^^^^^^^^^^^^^^^
  > 183 |           ...customerData,
        | ^^^^^^^^^^^^^^^^^^^^^
  > 184 |           createdAt: customerData.createdAt 
        | ^^^^^^^^^^^^^^^^^^^^^
  > 185 |             ? new Date(customerData.createdAt) 
        | ^^^^^^^^^^^^^^^^^^^^^
  > 186 |             : undefined
        | ^^^^^^^^^^^^^^^^^^^^^
  > 187 |         } as CustomerType;
        | ^^^^^^^^^^^^^^^^^^^^^^^^^^
    188 |       });
    189 |
    190 |       // Update customers in cache

 ERROR(TypeScript)  'id' is specified more than once, so this usage will be overwritten.
 FILE  /home/runner/GroomITManager/client/src/hooks/use-customers.ts:182:11

    180 |         const customerData = doc.data();
    181 |         return {
  > 182 |           id: doc.id,
        |           ^^^^^^^^^^
    183 |           ...customerData,
    184 |           createdAt: customerData.createdAt 
    185 |             ? new Date(customerData.createdAt) 

 ERROR(TypeScript)  No overload matches this call.
  Overload 1 of 4, '(value: string | number | Date): Date', gave the following error.
    Argument of type 'FieldValue | WithFieldValue<Date>' is not assignable to parameter of type 'string | number | Date'.
      Type 'FieldValue' is not assignable to type 'string | number | Date'.
  Overload 2 of 4, '(value: string | number): Date', gave the following error.
    Argument of type 'FieldValue | WithFieldValue<Date>' is not assignable to parameter of type 'string | number'.
      Type 'Date' is not assignable to type 'string | number'.
 FILE  /home/runner/GroomITManager/client/src/hooks/use-customers.ts:185:24

    183 |           ...customerData,
    184 |           createdAt: customerData.createdAt 
  > 185 |             ? new Date(customerData.createdAt) 
        |                        ^^^^^^^^^^^^^^^^^^^^^^
    186 |             : undefined
    187 |         } as CustomerType;
    188 |       });

 ERROR(TypeScript)  Type 'string | FieldValue' is not assignable to type 'string'.
  Type 'FieldValue' is not assignable to type 'string'.
 FILE  /home/runner/GroomITManager/client/src/hooks/use-customers.ts:239:13

    237 |           const customerData = doc.data();
    238 |           const customer = {
  > 239 |             id: doc.id,
        |             ^^
    240 |             firebaseId: doc.id, // Explicitly add firebaseId for component usage
    241 |             ...customerData,
    242 |             // Ensure createdAt is a valid Date object

 ERROR(TypeScript)  'id' is specified more than once, so this usage will be overwritten.
 FILE  /home/runner/GroomITManager/client/src/hooks/use-customers.ts:239:13

    237 |           const customerData = doc.data();
    238 |           const customer = {
  > 239 |             id: doc.id,
        |             ^^^^^^^^^^
    240 |             firebaseId: doc.id, // Explicitly add firebaseId for component usage
    241 |             ...customerData,
    242 |             // Ensure createdAt is a valid Date object

 ERROR(TypeScript)  Type 'FieldValue | WithFieldValue<string | null>' is not assignable to type 'string | null'.
  Type 'FieldValue' is not assignable to type 'string'.
 FILE  /home/runner/GroomITManager/client/src/hooks/use-customers.ts:240:13

    238 |           const customer = {
    239 |             id: doc.id,
  > 240 |             firebaseId: doc.id, // Explicitly add firebaseId for component usage
        |             ^^^^^^^^^^
    241 |             ...customerData,
    242 |             // Ensure createdAt is a valid Date object
    243 |             createdAt: customerData.createdAt 

 ERROR(TypeScript)  'firebaseId' is specified more than once, so this usage will be overwritten.
 FILE  /home/runner/GroomITManager/client/src/hooks/use-customers.ts:240:13

    238 |           const customer = {
    239 |             id: doc.id,
  > 240 |             firebaseId: doc.id, // Explicitly add firebaseId for component usage
        |             ^^^^^^^^^^^^^^^^^^
    241 |             ...customerData,
    242 |             // Ensure createdAt is a valid Date object
    243 |             createdAt: customerData.createdAt 

 ERROR(TypeScript)  Type 'Date' is not assignable to type 'string'.
 FILE  /home/runner/GroomITManager/client/src/hooks/use-customers.ts:243:13

    241 |             ...customerData,
    242 |             // Ensure createdAt is a valid Date object
  > 243 |             createdAt: customerData.createdAt 
        |             ^^^^^^^^^
    244 |               ? new Date(customerData.createdAt) 
    245 |               : new Date(),
    246 |             petCount: customerData.petCount || 0,

 ERROR(TypeScript)  No overload matches this call.
  Overload 1 of 4, '(value: string | number | Date): Date', gave the following error.
    Argument of type 'FieldValue | WithFieldValue<Date>' is not assignable to parameter of type 'string | number | Date'.
      Type 'FieldValue' is not assignable to type 'string | number | Date'.
  Overload 2 of 4, '(value: string | number): Date', gave the following error.
    Argument of type 'FieldValue | WithFieldValue<Date>' is not assignable to parameter of type 'string | number'.
      Type 'Date' is not assignable to type 'string | number'.
 FILE  /home/runner/GroomITManager/client/src/hooks/use-customers.ts:244:26

    242 |             // Ensure createdAt is a valid Date object
    243 |             createdAt: customerData.createdAt 
  > 244 |               ? new Date(customerData.createdAt) 
        |                          ^^^^^^^^^^^^^^^^^^^^^^
    245 |               : new Date(),
    246 |             petCount: customerData.petCount || 0,
    247 |             gender: customerData.gender || null

 ERROR(TypeScript)  Type 'number | FieldValue' is not assignable to type 'number'.
  Type 'FieldValue' is not assignable to type 'number'.
 FILE  /home/runner/GroomITManager/client/src/hooks/use-customers.ts:246:13

    244 |               ? new Date(customerData.createdAt) 
    245 |               : new Date(),
  > 246 |             petCount: customerData.petCount || 0,
        |             ^^^^^^^^
    247 |             gender: customerData.gender || null
    248 |           } satisfies CustomerType;
    249 |           console.log('FETCH_CUSTOMERS: Processed customer:', {

 ERROR(TypeScript)  Type '"male" | "female" | "other" | FieldValue | null' is not assignable to type '"male" | "female" | "other" | null'.
  Type 'FieldValue' is not assignable to type '"male" | "female" | "other" | null'.
 FILE  /home/runner/GroomITManager/client/src/hooks/use-customers.ts:247:13

    245 |               : new Date(),
    246 |             petCount: customerData.petCount || 0,
  > 247 |             gender: customerData.gender || null
        |             ^^^^^^
    248 |           } satisfies CustomerType;
    249 |           console.log('FETCH_CUSTOMERS: Processed customer:', {
    250 |             id: customer.id,

 ERROR(TypeScript)  Argument of type 'FieldValue | WithFieldValue<number | null>' is not assignable to parameter of type 'string | number | null | undefined'.
  Type 'FieldValue' is not assignable to type 'string | number | null | undefined'.
 FILE  /home/runner/GroomITManager/client/src/hooks/use-pets.ts:78:25

    76 |           image: petData.image || null,
    77 |           dateOfBirth: petData.dateOfBirth || null,
  > 78 |           age: toNumber(petData.age),
       |                         ^^^^^^^^^^^
    79 |           gender: petData.gender || null,
    80 |           weight: toNumber(petData.weight),
    81 |           weightUnit: petData.weightUnit || 'kg',

 ERROR(TypeScript)  Argument of type 'FieldValue | WithFieldValue<number | null>' is not assignable to parameter of type 'string | number | null | undefined'.
  Type 'FieldValue' is not assignable to type 'string | number | null | undefined'.
 FILE  /home/runner/GroomITManager/client/src/hooks/use-pets.ts:80:28

    78 |           age: toNumber(petData.age),
    79 |           gender: petData.gender || null,
  > 80 |           weight: toNumber(petData.weight),
       |                            ^^^^^^^^^^^^^^
    81 |           weightUnit: petData.weightUnit || 'kg',
    82 |           notes: petData.notes || null,
    83 |           createdAt: timestampToString(petData.createdAt) || new Date().toISOString(),

 ERROR(TypeScript)  Argument of type 'string | FieldValue' is not assignable to parameter of type 'Timestamp | null | undefined'.
  Type 'string' is not assignable to type 'Timestamp'.
 FILE  /home/runner/GroomITManager/client/src/hooks/use-pets.ts:83:40

    81 |           weightUnit: petData.weightUnit || 'kg',
    82 |           notes: petData.notes || null,
  > 83 |           createdAt: timestampToString(petData.createdAt) || new Date().toISOString(),
       |                                        ^^^^^^^^^^^^^^^^^
    84 |           updatedAt: timestampToString(petData.updatedAt),
    85 |           owner: customerDetails || null
    86 |         };

 ERROR(TypeScript)  Argument of type 'FieldValue | WithFieldValue<string | null>' is not assignable to parameter of type 'Timestamp | null | undefined'.
  Type 'string' is not assignable to type 'Timestamp'.
 FILE  /home/runner/GroomITManager/client/src/hooks/use-pets.ts:84:40

    82 |           notes: petData.notes || null,
    83 |           createdAt: timestampToString(petData.createdAt) || new Date().toISOString(),
  > 84 |           updatedAt: timestampToString(petData.updatedAt),
       |                                        ^^^^^^^^^^^^^^^^^
    85 |           owner: customerDetails || null
    86 |         };
    87 |       });

 ERROR(TypeScript)  Property 'success' does not exist on type '({ ...props }: Toast) => { id: string; dismiss: () => void; update: (props: ToasterToast) => void; }'.
 FILE  /home/runner/GroomITManager/client/src/hooks/use-services.ts:99:13

     97 |       await setDoc(docRef, firestoreData);
     98 |       await queryClient.invalidateQueries({ queryKey: ['services'] });
  >  99 |       toast.success('Service added successfully');
        |             ^^^^^^^
    100 |       return newService;
    101 |     } catch (error) {
    102 |       console.error('ADD_SERVICE: Error adding service:', error);

 ERROR(TypeScript)  Property 'error' does not exist on type '({ ...props }: Toast) => { id: string; dismiss: () => void; update: (props: ToasterToast) => void; }'.
 FILE  /home/runner/GroomITManager/client/src/hooks/use-services.ts:103:13

    101 |     } catch (error) {
    102 |       console.error('ADD_SERVICE: Error adding service:', error);
  > 103 |       toast.error(error instanceof Error ? error.message : 'Failed to add service');
        |             ^^^^^
    104 |       throw error;
    105 |     }
    106 |   };

 ERROR(TypeScript)  Property 'success' does not exist on type '({ ...props }: Toast) => { id: string; dismiss: () => void; update: (props: ToasterToast) => void; }'.
 FILE  /home/runner/GroomITManager/client/src/hooks/use-services.ts:129:13

    127 |       await updateDoc(serviceRef, updatePayload);
    128 |       await queryClient.invalidateQueries({ queryKey: ['services'] });
  > 129 |       toast.success('Service updated successfully');
        |             ^^^^^^^
    130 |       return true;
    131 |     } catch (error) {
    132 |       console.error('UPDATE_SERVICE: Error updating service:', error);

 ERROR(TypeScript)  Property 'error' does not exist on type '({ ...props }: Toast) => { id: string; dismiss: () => void; update: (props: ToasterToast) => void; }'.
 FILE  /home/runner/GroomITManager/client/src/hooks/use-services.ts:133:13

    131 |     } catch (error) {
    132 |       console.error('UPDATE_SERVICE: Error updating service:', error);
  > 133 |       toast.error(error instanceof Error ? error.message : 'Failed to update service');
        |             ^^^^^
    134 |       throw error;
    135 |     }
    136 |   };

 ERROR(TypeScript)  Property 'success' does not exist on type '({ ...props }: Toast) => { id: string; dismiss: () => void; update: (props: ToasterToast) => void; }'.
 FILE  /home/runner/GroomITManager/client/src/hooks/use-services.ts:143:13

    141 |       await deleteDoc(serviceRef);
    142 |       await queryClient.invalidateQueries({ queryKey: ['services'] });
  > 143 |       toast.success('Service deleted successfully');
        |             ^^^^^^^
    144 |       return true;
    145 |     } catch (error) {
    146 |       console.error('DELETE_SERVICE: Error deleting service:', error);

 ERROR(TypeScript)  Property 'error' does not exist on type '({ ...props }: Toast) => { id: string; dismiss: () => void; update: (props: ToasterToast) => void; }'.
 FILE  /home/runner/GroomITManager/client/src/hooks/use-services.ts:147:13

    145 |     } catch (error) {
    146 |       console.error('DELETE_SERVICE: Error deleting service:', error);
  > 147 |       toast.error(error instanceof Error ? error.message : 'Failed to delete service');
        |             ^^^^^
    148 |       throw error;
    149 |     }
    150 |   };

 ERROR(TypeScript)  Property 'phone' does not exist on type '{ id: string; email: string; name: string; role: "admin" | "groomer"; branchId: string | null; createdAt: Date; updatedAt?: Date | undefined; }'.
 FILE  /home/runner/GroomITManager/client/src/lib/firestore.ts:36:19

    34 |       email: user.email,
    35 |       name: user.name,
  > 36 |       phone: user.phone || '',
       |                   ^^^^^
    37 |       role: user.role,
    38 |       isActive: true,
    39 |       createdAt: timestamp,

 ERROR(TypeScript)  Property 'isGroomer' does not exist on type '{ id: string; email: string; name: string; role: "admin" | "groomer"; branchId: string | null; createdAt: Date; updatedAt?: Date | undefined; }'.
 FILE  /home/runner/GroomITManager/client/src/lib/firestore.ts:41:23

    39 |       createdAt: timestamp,
    40 |       branchId: user.branchId || null,
  > 41 |       isGroomer: user.isGroomer || false,
       |                       ^^^^^^^^^
    42 |       specialties: user.specialties || [],
    43 |       petTypePreferences: user.petTypePreferences || [],
    44 |       experienceYears: user.experienceYears || null,

 ERROR(TypeScript)  Property 'specialties' does not exist on type '{ id: string; email: string; name: string; role: "admin" | "groomer"; branchId: string | null; createdAt: Date; updatedAt?: Date | undefined; }'.
 FILE  /home/runner/GroomITManager/client/src/lib/firestore.ts:42:25

    40 |       branchId: user.branchId || null,
    41 |       isGroomer: user.isGroomer || false,
  > 42 |       specialties: user.specialties || [],
       |                         ^^^^^^^^^^^
    43 |       petTypePreferences: user.petTypePreferences || [],
    44 |       experienceYears: user.experienceYears || null,
    45 |       certifications: user.certifications || [],

 ERROR(TypeScript)  Property 'petTypePreferences' does not exist on type '{ id: string; email: string; name: string; role: "admin" | "groomer"; branchId: string | null; createdAt: Date; updatedAt?: Date | undefined; }'.
 FILE  /home/runner/GroomITManager/client/src/lib/firestore.ts:43:32

    41 |       isGroomer: user.isGroomer || false,
    42 |       specialties: user.specialties || [],
  > 43 |       petTypePreferences: user.petTypePreferences || [],
       |                                ^^^^^^^^^^^^^^^^^^
    44 |       experienceYears: user.experienceYears || null,
    45 |       certifications: user.certifications || [],
    46 |       availability: user.availability || null,

 ERROR(TypeScript)  Property 'experienceYears' does not exist on type '{ id: string; email: string; name: string; role: "admin" | "groomer"; branchId: string | null; createdAt: Date; updatedAt?: Date | undefined; }'.
 FILE  /home/runner/GroomITManager/client/src/lib/firestore.ts:44:29

    42 |       specialties: user.specialties || [],
    43 |       petTypePreferences: user.petTypePreferences || [],
  > 44 |       experienceYears: user.experienceYears || null,
       |                             ^^^^^^^^^^^^^^^
    45 |       certifications: user.certifications || [],
    46 |       availability: user.availability || null,
    47 |       maxDailyAppointments: user.maxDailyAppointments || null,

 ERROR(TypeScript)  Property 'certifications' does not exist on type '{ id: string; email: string; name: string; role: "admin" | "groomer"; branchId: string | null; createdAt: Date; updatedAt?: Date | undefined; }'.
 FILE  /home/runner/GroomITManager/client/src/lib/firestore.ts:45:28

    43 |       petTypePreferences: user.petTypePreferences || [],
    44 |       experienceYears: user.experienceYears || null,
  > 45 |       certifications: user.certifications || [],
       |                            ^^^^^^^^^^^^^^
    46 |       availability: user.availability || null,
    47 |       maxDailyAppointments: user.maxDailyAppointments || null,
    48 |       updatedAt: null

 ERROR(TypeScript)  Property 'availability' does not exist on type '{ id: string; email: string; name: string; role: "admin" | "groomer"; branchId: string | null; createdAt: Date; updatedAt?: Date | undefined; }'.
 FILE  /home/runner/GroomITManager/client/src/lib/firestore.ts:46:26

    44 |       experienceYears: user.experienceYears || null,
    45 |       certifications: user.certifications || [],
  > 46 |       availability: user.availability || null,
       |                          ^^^^^^^^^^^^
    47 |       maxDailyAppointments: user.maxDailyAppointments || null,
    48 |       updatedAt: null
    49 |     };

 ERROR(TypeScript)  Property 'maxDailyAppointments' does not exist on type '{ id: string; email: string; name: string; role: "admin" | "groomer"; branchId: string | null; createdAt: Date; updatedAt?: Date | undefined; }'.
 FILE  /home/runner/GroomITManager/client/src/lib/firestore.ts:47:34

    45 |       certifications: user.certifications || [],
    46 |       availability: user.availability || null,
  > 47 |       maxDailyAppointments: user.maxDailyAppointments || null,
       |                                  ^^^^^^^^^^^^^^^^^^^^
    48 |       updatedAt: null
    49 |     };
    50 |

 ERROR(TypeScript)  Argument of type '{ email: string; name: string; phone: any; role: "admin" | "groomer"; isActive: boolean; createdAt: Date; branchId: string | null; isGroomer: any; specialties: any; petTypePreferences: any; ... 4 more ...; updatedAt: null; }' is not assignable to parameter of type 'WithFieldValue<WithFieldValue<{ id: string; email: string; name: string; role: "admin" | "groomer"; branchId: string | null; createdAt: Date; updatedAt?: Date | undefined; }>>'.
  Property 'id' is missing in type '{ email: string; name: string; phone: any; role: "admin" | "groomer"; isActive: boolean; createdAt: Date; branchId: string | null; isGroomer: any; specialties: any; petTypePreferences: any; ... 4 more ...; updatedAt: null; }' but required in type '{ id: WithFieldValue<string | FieldValue>; email: WithFieldValue<string | FieldValue>; name: WithFieldValue<string | FieldValue>; role: WithFieldValue<...>; branchId: WithFieldValue<...>; createdAt: WithFieldValue<...>; updatedAt?: WithFieldValue<...>; }'.
 FILE  /home/runner/GroomITManager/client/src/lib/firestore.ts:51:27

    49 |     };
    50 |
  > 51 |     await setDoc(userRef, userData);
       |                           ^^^^^^^^
    52 |     return true;
    53 |   } catch (error) {
    54 |     console.error('Error creating user document:', error);

 ERROR(TypeScript)  Type 'string' is not assignable to type 'FieldValue | WithFieldValue<Date>'.
 FILE  /home/runner/GroomITManager/client/src/lib/firestore.ts:95:7

    93 |       petCount: 0,
    94 |       firebaseId: null,
  > 95 |       createdAt: timestamp,
       |       ^^^^^^^^^
    96 |       updatedAt: null
    97 |     };
    98 |

 ERROR(TypeScript)  Element implicitly has an 'any' type because expression of type 'string' can't be used to index type 'Omit<{ id: string; name: string; type: "dog" | "cat" | "bird" | "fish" | "other"; createdAt: string; updatedAt: string | null; firebaseId: string | null; breed: string; customerId: string; dateOfBirth: string | null; ... 7 more ...; submissionId?: string | undefined; }, "id" | ... 2 more ... | "firebaseId">'.
  No index signature with a parameter of type 'string' was found on type 'Omit<{ id: string; name: string; type: "dog" | "cat" | "bird" | "fish" | "other"; createdAt: string; updatedAt: string | null; firebaseId: string | null; breed: string; customerId: string; dateOfBirth: string | null; ... 7 more ...; submissionId?: string | undefined; }, "id" | ... 2 more ... | "firebaseId">'.
 FILE  /home/runner/GroomITManager/client/src/lib/firestore.ts:130:12

    128 |     const requiredFields = ['name', 'type', 'breed', 'customerId'];
    129 |     for (const field of requiredFields) {
  > 130 |       if (!pet[field]) {
        |            ^^^^^^^^^^
    131 |         throw new Error(`Missing required field: ${field}`);
    132 |       }
    133 |     }

 ERROR(TypeScript)  Type 'string' is not assignable to type 'Date & string'.
  Type 'string' is not assignable to type 'Date'.
 FILE  /home/runner/GroomITManager/client/src/lib/firestore.ts:267:7

    265 |     const processedData: Partial<Customer> & { updatedAt: string } = {
    266 |       ...data,
  > 267 |       updatedAt: new Date().toISOString()
        |       ^^^^^^^^^
    268 |     };
    269 |
    270 |     // Handle date conversion if createdAt is present

 ERROR(TypeScript)  Type 'any' is not assignable to type 'never'.
 FILE  /home/runner/GroomITManager/client/src/lib/firestore.ts:280:9

    278 |     const cleanedData = Object.entries(processedData).reduce<Partial<Customer> & { updatedAt: string }>((acc, [key, value]) => {
    279 |       if (value !== undefined) {
  > 280 |         acc[key as keyof (Partial<Customer> & { updatedAt: string })] = value as any;
        |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    281 |       }
    282 |       return acc;
    283 |     }, { updatedAt: new Date().toISOString() });

 ERROR(TypeScript)  Type 'string' is not assignable to type 'Date & string'.
  Type 'string' is not assignable to type 'Date'.
 FILE  /home/runner/GroomITManager/client/src/lib/firestore.ts:283:10

    281 |       }
    282 |       return acc;
  > 283 |     }, { updatedAt: new Date().toISOString() });
        |          ^^^^^^^^^
    284 |
    285 |     await setDoc(customerRef, cleanedData, { merge: true });
    286 |     return true;

 ERROR(TypeScript)  Argument of type '[string, string | number | Date | (Date & string) | null]' is not assignable to parameter of type 'PartialWithFieldValue<WithFieldValue<Customer>>'.
 FILE  /home/runner/GroomITManager/client/src/lib/firestore.ts:285:31

    283 |     }, { updatedAt: new Date().toISOString() });
    284 |
  > 285 |     await setDoc(customerRef, cleanedData, { merge: true });
        |                               ^^^^^^^^^^^
    286 |     return true;
    287 |   } catch (error) {
    288 |     console.error('Error updating customer:', error);

 ERROR(TypeScript)  Type 'any' is not assignable to type 'never'.
 FILE  /home/runner/GroomITManager/client/src/lib/firestore.ts:371:9

    369 |     const cleanedData = Object.entries(updateData).reduce<Partial<Pet> & { updatedAt: string }>((acc, [key, value]) => {
    370 |       if (value !== undefined) {
  > 371 |         acc[key as keyof (Partial<Pet> & { updatedAt: string })] = value as any;
        |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    372 |       }
    373 |       return acc;
    374 |     }, { updatedAt: new Date().toISOString() });

 ERROR(TypeScript)  Type 'Date' is not assignable to type 'string | FieldValue | { isEqual?: FieldValue | PartialWithFieldValue<(other: FieldValue) => boolean> | undefined; } | Partial<...> | null | undefined'.
 FILE  /home/runner/GroomITManager/client/src/lib/firestore.ts:399:7

    397 |     await setDoc(appointmentRef, {
    398 |       ...data,
  > 399 |       updatedAt: new Date()
        |       ^^^^^^^^^
    400 |     }, { merge: true });
    401 |     return true;
    402 |   } catch (error) {

 ERROR(TypeScript)  'customer.createdAt.seconds' is of type 'unknown'.
 FILE  /home/runner/GroomITManager/client/src/pages/CustomersPage.tsx:93:22

    91 |         ? customer.createdAt 
    92 |         : 'seconds' in customer.createdAt 
  > 93 |           ? new Date(customer.createdAt.seconds * 1000).toISOString()
       |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^
    94 |           : new Date().toISOString();
    95 |
    96 |       const updatedAt = customer.updatedAt

 ERROR(TypeScript)  'customer.updatedAt.seconds' is of type 'unknown'.
 FILE  /home/runner/GroomITManager/client/src/pages/CustomersPage.tsx:100:24

     98 |           ? customer.updatedAt
     99 |           : 'seconds' in customer.updatedAt
  > 100 |             ? new Date(customer.updatedAt.seconds * 1000).toISOString()
        |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^
    101 |             : null
    102 |         : null;
    103 |

 ERROR(TypeScript)  Conversion of type '({ id: string; gender: "male" | "female" | "other" | null; createdAt: string; updatedAt: string | null; petCount: number; firstName: string; lastName: string; email: string; phone: string; address: string | null; firebaseId: string | null; name?: string | undefined; } | { ...; })[]' to type 'Customer[]' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.
  Type '{ id: string; gender: "male" | "female" | "other" | null; createdAt: string; updatedAt: string | null; petCount: number; firstName: string; lastName: string; email: string; phone: string; address: string | null; firebaseId: string | null; name?: string | undefined; } | { ...; }' is not comparable to type 'Customer'.
    Type '{ id: string; gender: "male" | "female" | "other" | null; createdAt: string; updatedAt: string | null; petCount: number; firstName: string | FieldValue; lastName: string | FieldValue; ... 4 more ...; name?: FieldValue | WithFieldValue<...>; }' is not comparable to type 'Customer'.
      Types of property 'createdAt' are incompatible.
        Type 'string' is not comparable to type 'Date'.
 FILE  /home/runner/GroomITManager/client/src/pages/CustomersPage.tsx:553:19

    551 |           <DataTable 
    552 |             columns={columns} 
  > 553 |             data={customersData as Customer[]} 
        |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    554 |           />
    555 |         )}
    556 |       </div>

 ERROR(TypeScript)  Type 'string | null' is not assignable to type 'number | null'.
  Type 'string' is not assignable to type 'number'.
 FILE  /home/runner/GroomITManager/client/src/pages/CustomersPage.tsx:622:27

    620 |                           dateOfBirth: pet.dateOfBirth ? String(pet.dateOfBirth) : null,
    621 |                           age: typeof pet.age === 'number' ? pet.age : null,
  > 622 |                           weight: typeof pet.weight === 'number' ? String(pet.weight) : null,
        |                           ^^^^^^
    623 |                           weightUnit: pet.weightUnit || 'kg',
    624 |                           notes: pet.notes ? String(pet.notes) : null,
    625 |                           createdAt: typeof pet.createdAt === 'string' ? pet.createdAt : new Date().toISOString(),

 ERROR(TypeScript)  Type 'FieldValue | WithFieldValue<"kg" | "lbs">' is not assignable to type '"kg" | "lbs"'.
  Type 'FieldValue' is not assignable to type '"kg" | "lbs"'.
 FILE  /home/runner/GroomITManager/client/src/pages/CustomersPage.tsx:623:27

    621 |                           age: typeof pet.age === 'number' ? pet.age : null,
    622 |                           weight: typeof pet.weight === 'number' ? String(pet.weight) : null,
  > 623 |                           weightUnit: pet.weightUnit || 'kg',
        |                           ^^^^^^^^^^
    624 |                           notes: pet.notes ? String(pet.notes) : null,
    625 |                           createdAt: typeof pet.createdAt === 'string' ? pet.createdAt : new Date().toISOString(),
    626 |                           updatedAt: null,

 ERROR(TypeScript)  Property 'submissionId' does not exist on type '{ id: string; name: string; breed: string; type: Pet["type"]; image: string | null; gender: Pet["gender"]; customerId: string; createdAt: string; updatedAt: null; dateOfBirth: string | FieldValue | null; ... 4 more ...; owner: { ...; } | null; }'.
 FILE  /home/runner/GroomITManager/client/src/pages/CustomersPage.tsx:627:45

    625 |                           createdAt: typeof pet.createdAt === 'string' ? pet.createdAt : new Date().toISOString(),
    626 |                           updatedAt: null,
  > 627 |                           submissionId: pet.submissionId ? String(pet.submissionId) : undefined,
        |                                             ^^^^^^^^^^^^
    628 |                           owner: pet.owner ? {
    629 |                             id: String(pet.owner.id),
    630 |                             name: String(pet.owner.name),

 ERROR(TypeScript)  Property 'submissionId' does not exist on type '{ id: string; name: string; breed: string; type: Pet["type"]; image: string | null; gender: Pet["gender"]; customerId: string; createdAt: string; updatedAt: null; dateOfBirth: string | FieldValue | null; ... 4 more ...; owner: { ...; } | null; }'.
 FILE  /home/runner/GroomITManager/client/src/pages/CustomersPage.tsx:627:71

    625 |                           createdAt: typeof pet.createdAt === 'string' ? pet.createdAt : new Date().toISOString(),
    626 |                           updatedAt: null,
  > 627 |                           submissionId: pet.submissionId ? String(pet.submissionId) : undefined,
        |                                                                       ^^^^^^^^^^^^
    628 |                           owner: pet.owner ? {
    629 |                             id: String(pet.owner.id),
    630 |                             name: String(pet.owner.name),

 ERROR(TypeScript)  Type '({ createdAt: Date; petCount: number | FieldValue; gender: "other" | "male" | "female" | FieldValue | null; id: string; firstName: string; lastName: string; ... 5 more ...; name?: string | undefined; } | { ...; })[]' is not assignable to type '{ id: string; firebaseId: string | null; gender: "other" | "male" | "female" | null; createdAt: string; updatedAt: string | null; email: string; firstName: string; lastName: string; phone: string; address: string | null; petCount: number; }[]'.
  Type '{ createdAt: Date; petCount: number | FieldValue; gender: "other" | "male" | "female" | FieldValue | null; id: string; firstName: string; lastName: string; ... 5 more ...; name?: string | undefined; } | { ...; }' is not assignable to type '{ id: string; firebaseId: string | null; gender: "other" | "male" | "female" | null; createdAt: string; updatedAt: string | null; email: string; firstName: string; lastName: string; phone: string; address: string | null; petCount: number; }'.
    Type '{ createdAt: Date; petCount: number | FieldValue; gender: "other" | "male" | "female" | FieldValue | null; id: string; firstName: string; lastName: string; ... 5 more ...; name?: string; }' is not assignable to type '{ id: string; firebaseId: string | null; gender: "other" | "male" | "female" | null; createdAt: string; updatedAt: string | null; email: string; firstName: string; lastName: string; phone: string; address: string | null; petCount: number; }'.
      Types of property 'gender' are incompatible.
        Type '"other" | "male" | "female" | FieldValue | null' is not assignable to type '"other" | "male" | "female" | null'.
          Type 'FieldValue' is not assignable to type '"other" | "male" | "female" | null'.
 FILE  /home/runner/GroomITManager/client/src/pages/CustomersPage.tsx:716:17

    714 |                 hideCustomerField={true}
    715 |                 customerId={selectedCustomer.id}
  > 716 |                 customers={customersQuery.data || []}
        |                 ^^^^^^^^^
    717 |                 onCancel={() => setShowAddPet(false)}
    718 |               />
    719 |             </div>

 ERROR(TypeScript)  Argument of type '{ id: string; name: string; breed: string; type: Pet["type"]; image: string | null; gender: Pet["gender"]; customerId: string; createdAt: string; updatedAt: null; dateOfBirth: string | FieldValue | null; ... 4 more ...; owner: { ...; } | null; }' is not assignable to parameter of type 'SetStateAction<{ id: string; firebaseId: string | null; image: string | null; type: "dog" | "cat" | "bird" | "fish" | "other"; name: string; customerId: string; breed: string; dateOfBirth: string | null; ... 8 more ...; submissionId?: string | undefined; } | null>'.
  Property 'firebaseId' is missing in type '{ id: string; name: string; breed: string; type: Pet["type"]; image: string | null; gender: Pet["gender"]; customerId: string; createdAt: string; updatedAt: null; dateOfBirth: string | FieldValue | null; ... 4 more ...; owner: { ...; } | null; }' but required in type '{ id: string; firebaseId: string | null; image: string | null; type: "dog" | "cat" | "bird" | "fish" | "other"; name: string; customerId: string; breed: string; dateOfBirth: string | null; ... 8 more ...; submissionId?: string | undefined; }'.
 FILE  /home/runner/GroomITManager/client/src/pages/CustomersPage.tsx:960:46

    958 |                             className="ml-auto"
    959 |                             onClick={() => {
  > 960 |                               setSelectedPet(pet);
        |                                              ^^^
    961 |                               setShowPetDetails(true);
    962 |                             }}
    963 |                           >

 ERROR(TypeScript)  Module '"@/hooks/use-pets"' declares 'Pet' locally, but it is not exported.
 FILE  /home/runner/GroomITManager/client/src/pages/PetsPage.tsx:31:15

    29 |
    30 | import type { InsertPet } from "@/lib/types";
  > 31 | import type { Pet } from "@/hooks/use-pets";
       |               ^^^
    32 |
    33 | export default function PetsPage() {
    34 |   const { 

 ERROR(TypeScript)  Type '({ createdAt: Date; petCount: number | FieldValue; gender: "male" | "female" | "other" | FieldValue | null; id: string; firstName: string; lastName: string; ... 5 more ...; name?: string | undefined; } | { ...; })[]' is not assignable to type '{ id: string; firebaseId: string | null; firstName: string; lastName: string; email: string; phone: string; address: string | null; gender: "male" | "female" | "other" | null; petCount: number; createdAt: string; updatedAt: string | null; }[]'.
  Type '{ createdAt: Date; petCount: number | FieldValue; gender: "male" | "female" | "other" | FieldValue | null; id: string; firstName: string; lastName: string; ... 5 more ...; name?: string | undefined; } | { ...; }' is not assignable to type '{ id: string; firebaseId: string | null; firstName: string; lastName: string; email: string; phone: string; address: string | null; gender: "male" | "female" | "other" | null; petCount: number; createdAt: string; updatedAt: string | null; }'.
    Type '{ createdAt: Date; petCount: number | FieldValue; gender: "male" | "female" | "other" | FieldValue | null; id: string; firstName: string; lastName: string; ... 5 more ...; name?: string; }' is not assignable to type '{ id: string; firebaseId: string | null; firstName: string; lastName: string; email: string; phone: string; address: string | null; gender: "male" | "female" | "other" | null; petCount: number; createdAt: string; updatedAt: string | null; }'.
      Types of property 'gender' are incompatible.
        Type '"male" | "female" | "other" | FieldValue | null' is not assignable to type '"male" | "female" | "other" | null'.
          Type 'FieldValue' is not assignable to type '"male" | "female" | "other" | null'.
 FILE  /home/runner/GroomITManager/client/src/pages/PetsPage.tsx:311:13

    309 |             }}
    310 |             onCancel={() => setShowPetModal(false)}
  > 311 |             customers={customers}
        |             ^^^^^^^^^
    312 |             defaultValues={selectedPet ?? undefined}
    313 |             customerId={selectedPet?.customerId ?? (customers?.[0]?.firebaseId ?? '')}
    314 |             isEditing={!!selectedPet}

 ERROR(TypeScript)  No overload matches this call.
  Overload 1 of 2, '(value: { id: string | SQL<unknown> | Placeholder<string, any>; name: string | SQL<unknown> | Placeholder<string, any>; email: string | SQL<unknown> | Placeholder<string, any>; ... 12 more ...; maxDailyAppointments?: number | ... 3 more ... | undefined; }): PgInsertBase<...>', gave the following error.
    Argument of type '{ id: string; email: string; name: string; role: "staff" | "admin"; }' is not assignable to parameter of type '{ id: string | SQL<unknown> | Placeholder<string, any>; name: string | SQL<unknown> | Placeholder<string, any>; email: string | SQL<unknown> | Placeholder<string, any>; ... 12 more ...; maxDailyAppointments?: number | ... 3 more ... | undefined; }'.
      Property 'phone' is missing in type '{ id: string; email: string; name: string; role: "staff" | "admin"; }' but required in type '{ id: string | SQL<unknown> | Placeholder<string, any>; name: string | SQL<unknown> | Placeholder<string, any>; email: string | SQL<unknown> | Placeholder<string, any>; ... 12 more ...; maxDailyAppointments?: number | ... 3 more ... | undefined; }'.
  Overload 2 of 2, '(values: { id: string | SQL<unknown> | Placeholder<string, any>; name: string | SQL<unknown> | Placeholder<string, any>; email: string | SQL<unknown> | Placeholder<string, any>; ... 12 more ...; maxDailyAppointments?: number | ... 3 more ... | undefined; }[]): PgInsertBase<...>', gave the following error.
    Object literal may only specify known properties, and 'id' does not exist in type '{ id: string | SQL<unknown> | Placeholder<string, any>; name: string | SQL<unknown> | Placeholder<string, any>; email: string | SQL<unknown> | Placeholder<string, any>; ... 12 more ...; maxDailyAppointments?: number | ... 3 more ... | undefined; }[]'.
 FILE  /home/runner/GroomITManager/server/auth.ts:85:30

    83 |
    84 |     if (!existingUser) {
  > 85 |       await db.insert(users).values({
       |                              ^^^^^^
    86 |         id: user.id,
    87 |         email: user.email,
    88 |         name: user.name,

 ERROR(TypeScript)  Type 'string' is not assignable to type '"staff" | "admin"'.
 FILE  /home/runner/GroomITManager/server/auth.ts:168:11

    166 |           email: decodedToken.email || '',
    167 |           name: decodedToken.name || decodedToken.email || '',
  > 168 |           role: existingUser?.role || 'staff'
        |           ^^^^
    169 |         };
    170 |
    171 |         next();

[TypeScript] Found 104 errors. Watching for file changes.